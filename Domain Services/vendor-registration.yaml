openapi: 3.0.0
info:
  version: 1.1.0
  title: Vendor Registration(Business entity registration)
  description: |
    ### Register Vendor for desludging  ###
    * Register Desludging oprator in the system
    * Map vehicle to the DSO
    * Map driver to DSO
    * Search vendor details
    * add new vendor
    * update existing vendor details
    
  contact:
    name: Egovernments Foundation
    email: contact@egovernments.org
x-module: FSM
x-common-path: 'https://raw.githubusercontent.com/egovernments/municipal-services/common-contract/docs/common-contract-v2-0-0.yml'
paths:
  /vendor/v1/_create:
    post:
      tags:
        - Vendor
      summary: Add new vendor  
      description: Add the vendor details into the system
      operationId: createUsingPOST
      requestBody:
        description: Request schema.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VendorRequest'
      responses:
        '200':
          description: Request submitted successfully
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/VendorResponse'
        '201':
          description: Created
        '400':
          description: Failed to process the Request
          content:
            '*/*':
              schema:
                $ref: 'https://raw.githubusercontent.com/egovernments/municipal-services/common-contract/docs/common-contract-v2-0-0.yml#/components/schemas/ErrorRes'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /vendor/v1/_plainsearch:
    post:
      tags:
        - Vendor
      summary: Get the Vendor details via plain search
      description: |
        Gets the list of Vendor for a particular ULB based on plain search criteria.
      operationId: plainsearchUsingPOST
      parameters:
        - $ref: 'https://raw.githubusercontent.com/egovernments/municipal-services/common-contract/docs/common-contract-v2-0-0.yml#/components/parameters/tenantId'
          required: true
        - name: name
          in: query
          description: search with name of the business entity
          schema:
            type: string
        - name: vehicleRegistrationNumber
          in: query
          description: search based on the vehicle assigned to DSO with the vehicle registration number
          schema:
            type: string
        - name: vehicleType
          in: query
          description: search based on the vehicle assigned to DSO with the vehicleType
          schema:
            type: string
        - name: vehicleIds
          in: query
          description: search by list of uuid(s) of the vehicle assigned to the SO
          schema:
            type: array
            items:
              type: string
        - name: vehicleCapacity
          in: query
          description: Vehicle Capacity
          required: false
          style: form
          schema:
            type: string
        - name: ids
          in: query
          description: Search by list of UUID
          schema:
            type: array
            items:
              type: string
        - name : offset
          in: query
          description: offset for the pagination results
          schema:
            type: integer
        - name: limit
          in: query
          description: limit for the pagination results
          schema:
           type: integer
        - name: ownerIds
          in: query
          description: search by list of uuid(s) of the owner of the DSo
          schema:
            type: array
            items:
              type: string
        - name: mobileNumber
          in: query
          description: Search DSO by mobileNumber of the Owner of the DSO
          schema:
            type: string
        - name: driverIds
          in: query
          description: Search by list of UUID of of the drivers
          required: false
          style: pipeDelimited
          schema:
            type: array
            items:
              type: string
        - name: sortBy
          in: query
          description: sort the search results by fields
          required: false
          style: form
          schema:
            type: string
            enum:
              - createdTime
              - driverIds
              - ids
              - mobileNumber
              - name
              - ownerIds
              - status
              - tenantId
              - vehicleCapacity
              - vehicleIds
              - vehicleRegistrationNumber
              - vehicleType
              - vendor_createdTime
        - name: sortOrder
          in: query
          description: sorting order of the search resulsts
          required: false
          style: form
          schema:
            type: string
            enum:
              - ASC
              - DESC
        - name: status
          in: query
          description: "status of request processing - to be enhanced in futuer to include INPROGRESS"
          required: false
          style: pipeDelimited
          schema:
            type: array
            items:
              type: string
      requestBody:
        description: Request Schema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestInfoWrapper'
      responses:
        '200':
          description: Successful response sorted by reverse chrnological order of creation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/VendorResponse'
        '201':
          description: Created
        '400':
          description: Invalid input.
          content:
            '*/*':
              schema:
                $ref: 'https://raw.githubusercontent.com/egovernments/municipal-services/common-contract/docs/common-contract-v2-0-0.yml#/components/schemas/ErrorRes'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /vendor/v1/_search:
    post:
      tags:
        - Vendor
      summary: Get the Vendor details
      description: |
        Gets the list of Vendor for a particular ULB based on search criteria.
      parameters:
        - $ref: 'https://raw.githubusercontent.com/egovernments/municipal-services/common-contract/docs/common-contract-v2-0-0.yml#/components/parameters/tenantId'
          required: true
        - name: name
          in: query
          description: search with name of the business entity
          schema:
            type: string
        - name: vehicleRegistrationNumber
          in: query
          description: search based on the vehicle assigned to DSO with the vehicle registration number
          schema:
            type: string
        - name: vehicleType
          in: query
          description: search based on the vehicle assigned to DSO with the vehicleType
          schema:
            type: string
        - name: vehicleIds
          in: query
          description: search by list of uuid(s) of the vehicle assigned to the SO
          schema:
            type: array
            items:
              type: string
        - name: vehicleCapacity
          in: query
          description: Vehicle Capacity
          required: false
          style: form
          schema:
            type: string
        - name: ids
          in: query
          description: Search by list of UUID
          schema:
            type: array
            items:
              type: string
        - name : offset
          in: query
          description: offset for the pagination results
          schema:
            type: integer
        - name: limit
          in: query
          description: limit for the pagination results
          schema:
           type: integer
        - name: ownerIds
          in: query
          description: search by list of uuid(s) of the owner of the DSo
          schema:
            type: array
            items:
              type: string
        - name: mobileNumber
          in: query
          description: Search DSO by mobileNumber of the Owner of the DSO
          schema:
            type: string
        - name: driverIds
          in: query
          description: Search by list of UUID of of the drivers
          required: false
          style: pipeDelimited
          schema:
            type: array
            items:
              type: string
        - name: sortBy
          in: query
          description: sort the search results by fields
          required: false
          style: form
          schema:
            type: string
            enum:
              - createdTime
              - driverIds
              - ids
              - mobileNumber
              - name
              - ownerIds
              - status
              - tenantId
              - vehicleCapacity
              - vehicleIds
              - vehicleRegistrationNumber
              - vehicleType
              - vendor_createdTime
        - name: sortOrder
          in: query
          description: sorting order of the search resulsts
          required: false
          style: form
          schema:
            type: string
            enum:
              - ASC
              - DESC
        - name: status
          in: query
          description: "status of request processing - to be enhanced in futuer to include INPROGRESS"
          required: false
          style: pipeDelimited
          schema:
            type: array
            items:
              type: string
      requestBody:
        description: Request Schema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestInfoWrapper'
      responses:
        '200':
          description: Successful response sorted by reverse chrnological order of creation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/VendorResponse'
        '201':
          description: Created
        '400':
          description: Invalid input.
          content:
            '*/*':
              schema:
                $ref: 'https://raw.githubusercontent.com/egovernments/municipal-services/common-contract/docs/common-contract-v2-0-0.yml#/components/schemas/ErrorRes'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found        
  /vendor/v1/_update:
    post:
      summary: Update existing vendor details
      description: Updates the details of the vendor 
      tags:
        - Vendor
      operationId: updateUsingPOST
      requestBody:
        description: Request schema.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VendorRequest'
      responses:
        '200':
          description: Request submitted successfully
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/VendorResponse'
        '201':
          description: Created
        '400':
          description: Failed to process the application
          content:
            '*/*':
              schema:
                $ref: 'https://raw.githubusercontent.com/egovernments/municipal-services/common-contract/docs/common-contract-v2-0-0.yml#/components/schemas/ErrorRes'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          
  /vendor/driver/v1/_create:
    post:
      tags:
        - Vendor Driver
      summary: Add new driver 
      description: Add the vendor driver details into the system
      operationId: createUsingPOST_1
      requestBody:
        description: Request Schema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DriverRequest'
      responses:
        '200':
          description: Request submitted successfully
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DriverResponse'
        '201':
          description: Created
        '400':
          description: Failed to process the Request
          content:
            '*/*':
              schema:
                $ref: 'https://raw.githubusercontent.com/egovernments/municipal-services/common-contract/docs/common-contract-v2-0-0.yml#/components/schemas/ErrorRes'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /vendor/driver/v1/_search:
    post:
      tags:
        - Vendor Driver
      summary: Get the Driver details via search
      description: |
        Gets the list of Drivers for a particular ULB based on search criteria.
      operationId: searchUsingPOST_1
      parameters:
        - name: driverWithNoVendor
          in: query
          description: True if there is a driver without any vendor assigned
          required: false
          style: form
          schema:
            type: boolean
        - name: dsoName
          in: query
          description: Name of DSO
          required: false
          style: pipeDelimited
          schema:
            type: array
            items:
              type: string
        - name: ids
          in: query
          description: "List of system generated ids of applications."
          required: false
          style: pipeDelimited
          schema:
            type: array
            items:
              type: string
        - name: limit
          in: query
          description: limit
          required: false
          style: form
          schema:
            type: integer
            format: int32
        - name: mobileNumber
          in: query
          description: "MobileNumber of driver"
          required: false
          style: form
          schema:
            type: string
        - name: name
          in: query
          description: "Name of driver"
          required: false
          style: pipeDelimited
          schema:
            type: array
            items:
              type: string
        - name: offset
          in: query
          description: offset index of the overall search results
          required: false
          style: form
          schema:
            type: integer
            format: int32
        - name: ownerIds
          in: query
          description: Id credential for Owners
          required: false
          style: pipeDelimited
          schema:
            type: array
            items:
              type: string
        - name: sortBy
          in: query
          description: sort the search results by fields
          required: false
          style: form
          schema:
            type: string
            enum:
              - createdTime
              - driverWithNoVendor
              - dsoName
              - ids
              - mobileNumber
              - name
              - ownerIds
              - status
              - tenantId
        - name: sortOrder
          in: query
          description: sorting order of the search results
          required: false
          style: form
          schema:
            type: string
            enum:
              - ASC
              - DESC
        - name: status
          in: query
          description: "status of request processing - to be enhanced in futuer to include INPROGRESS"
          required: false
          style: pipeDelimited
          schema:
            type: array
            items:
              type: string
        - name: tenantId
          in: query
          description: "Unique id for a tenant."
          required: false
          style: form
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestInfoWrapper'
      responses:
        '200':
          description: Successful response sorted by reverse chrnological order of creation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DriverResponse'
        '201':
          description: Created
        '400':
          description: Invalid input.
          content:
            '*/*':
              schema:
                $ref: 'https://raw.githubusercontent.com/egovernments/municipal-services/common-contract/docs/common-contract-v2-0-0.yml#/components/schemas/ErrorRes'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /vendor/driver/v1/_update:
    post:
      tags:
        - Vendor Driver
      summary: Update existing driver details
      description: Updates the details of the driver
      operationId: updateUsingPOST_1
      requestBody:
        description: Request schema.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DriverRequest'
      responses:
        '200':
          description: Request submitted successfully
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DriverResponse'
        '201':
          description: Created
        '400':
          description: Failed to process the application
          content:
            '*/*':
              schema:
                $ref: 'https://raw.githubusercontent.com/egovernments/municipal-services/common-contract/docs/common-contract-v2-0-0.yml#/components/schemas/ErrorRes'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found        
components:
  schemas:
    Address:
      title: Address
      required:
        - locality
      type: object
      properties:
        addressId: 
          maxLength: 64
          minLength: 0
          type: string
          description: Address Id  
        addressLine1:
          type: string
          description: first address line 
        addressLine2:
          maxLength: 256
          minLength: 0
          type: string
          description: second address line 
        addressNumber:
          maxLength: 64
          minLength: 0
          type: string
          description: address number
        additionDetails:
          type: string
          description: more address detail as may be needed
        auditDetails:
          $ref: '#/components/schemas/AuditDetails'
        buildingName:
          maxLength: 64
          minLength: 2
          type: string
          description: Name of the building
        city:
          type: string
          description: City of the address. Can be represented by the tenantid itself
        country:
          type: string
          description: The country in which the property is located
        district:
          type: string
          description: The district in which the property is located
        doorNo:
          type: string
          description: House number or door number.
        geoLocation:
          $ref: '#/components/schemas/GeoLocation'
        id:
          type: string
          description: System generated id for the address
          readOnly: true
        landmark:
          type: string
          description: additional landmark to help locate the address
        locality:
          $ref: '#/components/schemas/Boundary'
        pincode:
          type: string
          
        plotNo:
          type: string
          description: Plot number of the house.
        region:
          type: string
          description: The Region in which the property is located
        state:
          type: string
          description: The State in which the property is located
        street:
          maxLength: 64
          minLength: 2
          type: string
          description: Street Name
        tenantId:
          type: string
          description: Unique Identifier of the tenant to which user primarily belongs
        type:
          maxLength: 64
          minLength: 0
          type: string
      description: 'Representation of a address. Indiavidual APIs may choose to extend from this using allOf if more details needed to be added in their case. '
    AuditDetails:
      title: AuditDetails
      type: object
      properties:
        createdBy:
          type: string
          description: username (preferred) or userid of the user that created the object
        createdTime:
          type: integer
          description: epoch of the time object is created
          format: int64
        lastModifiedBy:
          type: string
          description: username (preferred) or userid of the user that last modified the object
        lastModifiedTime:
          type: integer
          description: epoch of the time object is last modified
          format: int64
      description: Collection of audit related fields used by most models
    Boundary:
      title: Boundary
      required:
        - code
        - name
      type: object
      properties:
        children:
          type: array
          items:
            $ref: '#/components/schemas/Boundary'
        code:
          type: string
          description: code of the boundary.
        label:
          type: string
          description: localized label for the boundry.
        latitude:
          type: string
          description: latitude of the boundary.
        longitude:
          type: string
          description: longitude of the boundary.
        materializedPath:
          type: string
          description: materialized path of the boundary - this would be of the format tenantid.[code] from parentt till teh current boundary
          readOnly: true
        name:
          type: string
          description: name of the boundary.
    Driver:
      title: Driver
      type: object
      properties:
        additionalDetails:
          type: object
        auditDetails:
          $ref: '#/components/schemas/AuditDetails'
        description:
          type: string
        id:
          description: "List of system generated id of applications."
          type: string
        licenseNumber:
          description: "License number of the driver"
          type: string
        name:
          description: "Name of the driver"
          maxLength: 128
          minLength: 0
          type: string
        owner:
          $ref: '#/components/schemas/User'
        ownerId:
          description: "Owner id of the driver"
          maxLength: 64
          minLength: 0
          type: string
        status:
          description: "status of request processing - to be enhanced in futuer to include INPROGRESS"
          type: string
          enum:
            - ACTIVE
            - DISABLED
            - INACTIVE
        tenantId:
          description: "Unique id for a tenant."
          maxLength: 64
          minLength: 0
          type: string
        vendorDriverStatus:
          type: string
          description: Vendor driver status
          enum:
            - ACTIVE
            - DISABLED
            - INACTIVE
    DriverRequest:
      title: DriverRequest
      type: object
      properties:
        RequestInfo:
          $ref: '#/components/schemas/RequestInfo'
        driver:
          $ref: '#/components/schemas/Driver'
    DriverResponse:
      title: DriverResponse
      type: object
      properties:
        driver:
          type: array
          items:
            $ref: '#/components/schemas/Driver'
        responseInfo:
          $ref: '#/components/schemas/ResponseInfo'
        totalCount:
          type: integer
          format: int32
          description: Total count
    GeoLocation:
      title: GeoLocation
      type: object
      properties:
        additionalDetails:
          type: object
          description: Additional details to be added
        id:
          type: string
          description: "System generated unique ids for applications."
        latitude:
          type: number
          format: double
          description: latitude of the address
        longitude:
          type: number
          format: double
          description: longitude of the address
    PlainAccessRequest:
      title: PlainAccessRequest
      type: object
      properties:
        plainRequestFields:
          type: array
          description: Plain request fields
          items:
            type: string
        recordId:
          description: Record id for request
          type: string
    RequestInfo:
      title: RequestInfo
      type: object
      properties:
        action:
          type: string
          description: "Action on the application in certain"
        apiId:
          description: unique API ID
          type: string
        authToken:
          description: "//session/jwt/saml token/oauth token - the usual value that would go into HTTP bearer token"
          type: string
        correlationId:
          type: string
          description: "RequestInfo should be used to carry meta information about the requests to the server as described in the fields below. All eGov APIs will use requestinfo as a part of the request body to carry this meta information. Some of this information will be returned back from the server as part of the ResponseInfo in the response body to ensure correlation."
        did:
          type: string
          description: "Device ID from which the API is called"
        key:
          description: "API key (API key provided to the caller in case of server to server communication)"
          type: string
        msgId:
          description: "message id of the request"
          type: string
        ts:
          description: time in epoch
          type: integer
          format: int64
        plainAccessRequest:
          $ref: '#/components/schemas/PlainAccessRequest'
        userInfo:
          $ref: '#/components/schemas/User0'
        ver:
          description: "API version - for HTTP based request this will be same as used in path"
          type: string
    RequestInfoWrapper:
      title: RequestInfoWrapper
      type: object
      properties:
        RequestInfo:
          $ref: '#/components/schemas/RequestInfo'
    ResponseInfo:
      title: ResponseInfo
      type: object
      properties:
        apiId:
          description: unique API ID
          type: string
        msgId:
          description: "message id of the request"
          type: string
        resMsgId:
          description: "unique response message id (UUID) - will usually be the correlation id from the server"
          type: string
        status:
          description: current application status in the system records
          type: string
        ts: 
          description: time in epoch
          type: integer
          format: int64
        ver:
          description: "API version - for HTTP based request this will be same as used in path"
          type: string        

    Role:
      title: Role
      type: object
      properties:
        code:
          description: "Unique code of the role"
          maxLength: 50
          minLength: 0
          type: string
        id:
          description: "Unique id of the role"
          type: integer
          format: int64
        name:
          description: "Unique name of the role"
          maxLength: 128
          minLength: 0
          type: string
        tenantId:
          description: "Unique tenant id of the tenant"
          maxLength: 256
          minLength: 0
          type: string
    User:
      required:
      - active
      - gender
      - locale
      - mobileNumber
      - name
      - tenantId
      - type
      - userName
      type: object
      properties:
        id:
          type: integer
          description: The unique id an user.
          format: int64
        userName:
          maxLength: 64
          minLength: 1
          type: string
          description: The unique username used for user login.
        password:
          maxLength: 64
          type: string
          description: Password for user login.
          format: password
        salutation:
          maxLength: 5
          type: string
        name:
          maxLength: 100
          minLength: 3
          type: string
          description: The full name of the user.
        gender:
          type: string
          description: Gender of the user.
        mobileNumber:
          maxLength: 10
          type: string
          description: Mobile number of the user
        emailId:
          maxLength: 128
          type: string
          description: Email address of the user
        altContactNumber:
          maxLength: 10
          type: string
          description: Alternate contact number of the user
        pan:
          maxLength: 10
          type: string
          description: PAN number of the user
        aadhaarNumber:
          maxLength: 12
          pattern: '[0-9]'
          type: string
          description: Aadhaar number of the user
        permanentAddress:
          maxLength: 300
          type: string
          description: Permanent address of the user.
        permanentCity:
          maxLength: 300
          type: string
          description: City of the permanent address.
        permanentPincode:
          maxLength: 6
          type: string
        correspondenceCity:
          maxLength: 50
          type: string
          description: City of the correspondence address.
        correspondencePincode:
          maxLength: 6
          type: string
          description: Permanent address pincode.
        correspondenceAddress:
          maxLength: 300
          type: string
          description: Correspondence address of the user.
        active:
          type: boolean
          description: True if the user is active and False if the user is inactive.
        dob:
          type: string
          description: Data of bith of the user in dd/mm/yyyy format.
          format: date
        pwdExpiryDate:
          type: string
          description: Date on which the password registered will expire.
          format: date
          readOnly: true
        locale:
          maxLength: 10
          type: string
          description: Value will be set to "en_IN".
        type:
          maxLength: 20
          type: string
          description: System set value internally. For employee value will be always
            "EMPLOYEE". For citizen value will be "CITIZEN".
        signature:
          type: string
          description: Image to be loaded for the signature of the employee
        accountLocked:
          type: boolean
          description: Set to True if account is locked after several incorrect password
            attempt. False if account is not locked.
        roles:
          type: array
          description: List of roles that are attached to the user.
          items:
            $ref: '#/components/schemas/Role'
        fatherOrHusbandName:
          maxLength: 100
          type: string
          description: Name of user's father or husband.
        bloodGroup:
          maxLength: 3
          type: string
          description: Blood group of the user.
        identificationMark:
          maxLength: 300
          type: string
          description: Any identification mark of the person.
        photo:
          type: string
          description: Image to be loaded for the photo of the user
        createdBy:
          type: integer
          description: Id of the user who created the record.
          format: int64
        createdDate:
          type: string
          description: Date on which the user master data was added into the system.
          format: date
        lastModifiedBy:
          type: integer
          description: Id of the user who last modified the record.
          format: int64
        lastModifiedDate:
          type: string
          description: Date on which the user master data was last modified.
          format: date
        otpReference:
          type: string
          description: This is the UUID token that we genarate as part of OTP.
        tenantId:
          type: string
          description: Unique Identifier of the tenant, Like AP, AP.Kurnool etc.
    User0:
      title: User0
      type: object
      properties:
        emailId:
          description: "email address of the authenticated user"
          maxLength: 300
          minLength: 0
          type: string
        id:
          description: "List of system generated ids of applications."
          type: integer
          format: int64
        mobileNumber:
          description: "MobileNumber of User"
          maxLength: 150
          minLength: 0
          type: string
        name:
          description: "Name of User"
          maxLength: 250
          minLength: 0
          type: string
        roles:
          type: array
          items:
            $ref: '#/components/schemas/Role'
        tenantId:
          maxLength: 256
          minLength: 0
          type: string
          description: "Unique id for a tenant."
        type:
          description: Type of User
          maxLength: 50
          minLength: 0
          type: string
        userName:
          description: "Unique user name of the authenticated user"
          maxLength: 180
          minLength: 0
          type: string
        uuid:
          description: "System Generated User id of the authenticated user."  
          maxLength: 36
          minLength: 0
          type: string
    Vehicle:
      type: object
      description: |
        Instance of Service request raised for a particular service. As per extension propsed in the Service definition "attributes" carry the input values requried by metadata definition in the structure as described by the corresponding schema.

        * Any one of 'address' or '(lat and lang)' or 'addressid' is mandatory
      properties:
        vehicleOwner:
          $ref: 'https://raw.githubusercontent.com/egovernments/municipal-services/common-contract/docs/common-contract-v2-0-0.yml#/components/schemas/UserInfo'
        id:
          type: string
          readOnly: true
          description: The server generated unique ID(UUID).
          minLength: 2
          maxLength: 64
        tenantId:
          type: string
          description: Unique identifier of the tenant.
          minLength: 2
          maxLength: 64
        registrationNumber: 
          type: string
          description: Unique Vehicle registration number.
          minLength: 2
          maxLength: 128
        model:
          type: string
          description: Vehicle model number(this the master data defined in MDMS).
          minLength: 2
          maxLength: 256
        type:
          type: string
          description: Vehicle Type master, defined in MDMS. 
          minLength: 2
          maxLength: 64
        tankCapicity:
          type: integer
          format: int64
          description: Tank capacity in liters. 
          minLength: 2
          maxLength: 64
        suctionType:
          type: string
          description: This is the mdms master data. 
          minLength: 2
          maxLength: 64
        pollutionCertiValidTill:
          type: integer
          format: int64
          description: Pollution certificate valid till for vehicle(epoc date). 
          minLength: 2
          maxLength: 64
        InsuranceCertValidTill:
          type: integer
          format: int64
          description: Vehicle insurance valid till(epoc date). 
          minLength: 2
          maxLength: 64
        fitnessValidTill:
          type: integer
          format: int64
          description: Vehicle fitness valid till(epoc date). 
          minLength: 2
          maxLength: 64
        roadTaxPaidTill:
          type: integer
          format: int64
          description: Road tax paid for the Vehicle. 
          minLength: 2
          maxLength: 64
        gpsEnabled:
          type: boolean
          description: Whether Vehicle equipped with GPS device. 
        additionalDetail:
          type: object
          description: This is the json object that will carry the actual input (whereever the metadata requries input). Structure should be same as the schema definition provided in the metadata of the service (schema compliance check to be performed at client/server)
        source:
          type: string
          description: 'Source mdms master data. Which captures the source of the service request(ex:- whatsapp, ivr, Swachhata etc)'
          minLength: 2
          maxLength: 64
          example: whatsapp, ivr etc
        status:
          type: string
          description: Inactive records will be consider as soft deleted 
          enum:
           - ACTIVE
           - INACTIVE
        auditDetails:
          $ref: 'https://raw.githubusercontent.com/egovernments/municipal-services/common-contract/docs/common-contract-v2-0-0.yml#/components/schemas/AuditDetails'
      required:
        - tenantId
        - registrationNumber
        - model
        - type

    Vendor:
      title: Vendor
      type: object
      properties:
        additionalDetails:
          type: object
        address:
          $ref: '#/components/schemas/Address'
        agencyType:
          description: Type of agency
          maxLength: 128
          minLength: 0
          type: string
        auditDetails:
          $ref: '#/components/schemas/AuditDetails'
        description:
          type: string
        drivers:
          type: array
          items:
            $ref: '#/components/schemas/Driver'
        id:
          type: string
          description: Unique id credential for Vendor
        name: 
          description: Name of the Vendor
          maxLength: 128
          minLength: 0
          type: string
        owner:
          $ref: '#/components/schemas/User'
        ownerId:
          description: Unique Owner id credential 
          maxLength: 64
          minLength: 0
          type: string
        paymentPreference:
          description: Payment preference for the vendor
          maxLength: 128
          minLength: 0
          type: string
        source:
          description: source
          type: string
        status:
          description: current application status in the system records
          type: string
          enum:
            - ACTIVE
            - DISABLED
            - INACTIVE
        tenantId:
          description: "Unique id for a tenant."
          maxLength: 64
          minLength: 0
          type: string
        vehicles:
          type: array
          items:
            $ref: '#/components/schemas/Vehicle'
    VendorRequest:
      title: VendorRequest
      description: Request for Vendor registration 
      type: object
      properties:
        RequestInfo:
          $ref: '#/components/schemas/RequestInfo'
        vendor:
          $ref: '#/components/schemas/Vendor'
    VendorResponse:
      title: VendorResponse
      description: Response of Vendor detail
      type: object
      properties:
        responseInfo:
          $ref: '#/components/schemas/ResponseInfo'
        totalCount:
          type: integer
          format: int32
        vendor:
          type: array
          items:
            $ref: '#/components/schemas/Vendor'
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/WalkingTreeDev/eGov-DSO/1.0.0