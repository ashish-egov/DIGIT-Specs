openapi: 3.0.3
info:
  title: Measurement Book APIs
  description: >
    APIs to create, modify and search measurement books. Measurement books
    contain a list of measurements against some baselines or reference values.
    Measurements can aid in assessing progress with respect to the baseline or
    reference values. There are two kinds of measurements - Abstract and Detailed. An abstract measurement records a value for a measurement. A detailed measurement records a value as well as the the parameters and associated measurements used to derive the value. An abstract measurement can have detailed measurements.
  version: 1.0.0
  contact:
    name: eGov Foundation
    email: contact@egovernments.org
  license:
    name: MIT License
    url: https://opensource.org/license/mit/
externalDocs:
  description: DIGIT Works Platform
  url: https://works.digit.org
tags:
  - name: MeasurementBook
    description: Endpoints for the measurement book registry
  - name: Measurement
    description: Endpoints for adding measurements to a measurement book
  - name: Measurement Services
    description: APIs to create measurements along with Workflow and other business services on top of the registry.
paths:
  /measurementbook/v1/_create:
    post:
      summary: /mbook/v1/_create
      description: Create a measurement book
      tags:
        - MeasurementBook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MBRequest'
      responses:
        '202':
          description: Accepted create measurement book request.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MBResponse'
        '400':
          description: Invalid input.
          content:
            '*/*':
              schema:
                $ref: >-
                  https://raw.githubusercontent.com/egovernments/DIGIT-OSS/master/core-services/docs/common-contract_v1-1.yml#/components/schemas/ErrorRes
  /measurementbook/v1/_update:
    post:
      summary: /mbook/v1/_update
      description: Update values in a measurement book
      tags:
        - MeasurementBook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MBRequest'
      responses:
        '200':
          description: Accepted update measurement book request.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MBResponse'
        '400':
          description: Invalid input.
          content:
            '*/*':
              schema:
                $ref: >-
                  https://raw.githubusercontent.com/egovernments/DIGIT-OSS/master/core-services/docs/common-contract_v1-1.yml#/components/schemas/ErrorRes
  /measurement/v1/_create:
    post:
      summary: /measurement/v1/_create
      description: Create one or more measurement entries
      tags:
        - Measurement
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeasurementRequest'
      responses:
        '202':
          description: Accepted create measurement request.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MeasurementResponse'
        '400':
          description: Invalid input.
          content:
            '*/*':
              schema:
                $ref: >-
                  https://raw.githubusercontent.com/egovernments/DIGIT-OSS/master/core-services/docs/common-contract_v1-1.yml#/components/schemas/ErrorRes
  /measurement/v1/_update:
    post:
      summary: /measurement/v1/_update
      description: Update one or more measurement entries
      tags:
        - Measurement
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeasurementRequest'
      responses:
        '200':
          description: Accepted update measurement request.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MeasurementResponse'
        '400':
          description: Invalid input.
          content:
            '*/*':
              schema:
                $ref: >-
                  https://raw.githubusercontent.com/egovernments/DIGIT-OSS/master/core-services/docs/common-contract_v1-1.yml#/components/schemas/ErrorRes
  
  /measurementservice/v1/_create:
    post:
      summary: /measurementservice/v1/_create
      description: Creates a measurement entry along with workflow details.
      tags:
        - Measurement Services
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeasurementServiceRequest'
      responses:
        '202':
          description: Accepted create measurement book request.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MeasurementServiceResponse'
        '400':
          description: Invalid input.
          content:
            '*/*':
              schema:
                $ref: >-
                  https://raw.githubusercontent.com/egovernments/DIGIT-OSS/master/core-services/docs/common-contract_v1-1.yml#/components/schemas/ErrorRes
  /measurementservice/v1/_update:
    post:
      summary: /measurementservice/v1/_update
      description: Update values in a measurement book
      tags:
        - Measurement Services
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeasurementServiceRequest'
      responses:
        '200':
          description: Accepted update measurement book request.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MeasurementServiceResponse'
        '400':
          description: Invalid input.
          content:
            '*/*':
              schema:
                $ref: >-
                  https://raw.githubusercontent.com/egovernments/DIGIT-OSS/master/core-services/docs/common-contract_v1-1.yml#/components/schemas/ErrorRes
                
components:
  schemas:
    MeasurementBook:
      type: object
      description: >-
        The mBook models a physical measurement book. An mBook is created with a
        list of items it is supposed to measure.
      properties:
        id:
          type: string
          description: Unique uuid for this measurement book
          format: uuid
          minLength: 2
          maxLength: 64
          readOnly: true
        mBookNumber:
          type: string
          description: Formatted number for the measurement book
          example: MB/2023-24/001
          minLength: 2
          maxLength: 64
        referenceId:
          type: string
          description: >-
            Reference to the entity this measurement book is related to.
            Example: contract number or id
          example: WO/2023-24/123
          minLength: 2
          maxLength: 64
        referenceUri:
          type: string
          description: Base path of entity or service related to this MB
          example: /contracts/
        fromPeriod:
          description: From date of validity period.Eg. validity of contract period.
          type: number
          format: timestamp
        toPeriod:
          description: To date of validity period.
          type: number
          format: timestamp
        isActive:
          type: boolean
        measurables:
          type: array
          description: >-
            List of items with reference values against which measurements will
            be made. These can be master data defined per measurement type or point to ids in some other service. In the case of a health report, these are the item codes for BP, sugar, cholesterol etc..
          example: contractLineItemIds
          items:
            type: string
        auditDetails:
          $ref: >-
            https://raw.githubusercontent.com/egovernments/DIGIT-OSS/master/core-services/docs/common-contract_v1-1.yml#/components/schemas/AuditDetails
        additionalDetails:
          type: object
          description: >-
            Any additional information that needs to be attached to the object.
            For attachments, fileStoreIds will also be stored here. 
      required:
        - id
        - measurables
    
    AbstractMeasurement:
      type: object
      description: This defines an abstract level of measurement without detailed parameters. Captures only a value with a unit of measurement without the exact dimensions used to arrive at said quantity. An abstract measurement can be derived from detailed measurements using some formula.
      properties:
        id:
          type: string
          description: Unique identifier of the detailed measurement entry
          format: uuid
          example: 251c51eb-e970-4e01-a99a-70136c47a934
          minLength: 2
          maxLength: 64
          readOnly: true
        measurementNumber:
          type: string
          description: Formatted number for this entry
        measurementType:
          type: string
          description: The type of measurement. This will be a code from a namespaced master.
          example: Works, TQM, Health
        referenceId:
          type: string
          example: FSTP plant ID, Contract line item ID
          description: The related entity for this measurement. Depends on implementation.
          minLength: 2
          maxLength: 64
        targetId:
          type: string
          description: >-
            References the measurable item for which this measurement is being
            made.
          example: measurableItemId, contractlineitemid
        fromDate:
          type: number
          format: timestamp
        toDate:
          type: number
          format: timestamp
        value:
          type: number
          description: >-
            Related to measures - if available - using a formula. Else can be
            entered directly.
        uom:
          type: string
          description: Unit of measurement for the value.
        uomValue:
          type: string
          description: In case UOM is in multiples
          example: 10kg
        detailedMeasurements:
          type: array
          items:
            $ref: '#/components/schemas/DetailedMeasurement'
        comments:
          type: string
          description: Any observational comments made during measurement
        location:
          $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-OSS/master/core-services/docs/common-contract_v1-1.yml#/components/schemas/Address'
        documents:
          description: >-
            Reference to documents related to the organisation that have been
            attached via file upload
          type: array
          items:
            $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-OSS/master/core-services/docs/common-contract_v1-1.yml#/components/schemas/Document'
        isActive:
          type: boolean
          description: Flag used to soft delete entries
          default: true
        auditDetails:
          $ref: >-
            https://raw.githubusercontent.com/egovernments/DIGIT-OSS/master/core-services/docs/common-contract_v1-1.yml#/components/schemas/AuditDetails
        additionalDetails:
          type: object
          description: >-
            Any additional information that needs to be attached to the
            estimate. For attachments, fileStoreIds will also be stored here.
      required:
        - id
        - value
        - targetId
        - uom
        - uomValue
     
    DetailedMeasurement:
      type: object
      properties:
        allOf:
          $ref: '#/components/schemas/AbstractMeasurement'
        parentMeasurementId:
          type: string
          description: If this measurement is a child of another measurement
        measures:
          type: array
          description: Parameters used to measure this item. This can be defined per measurementType in masters.
          example: isDeduction, L, B, H, numItems etc..
          items:
            $ref: '#/components/schemas/Measure'
          minItems: 1
      required:
        - id
        - targetId
        - measures
        - uom
        - uomValue
        - value
    
    Measure:
      type: object
      description: >-
        Entity captures dimension being measured, unit of measurement and
        associated value.
      properties:
        code:
          type: string
          description: Measurement dimension code derived from master. L or B or H
          example: length, isDeduction, numItems
          minLength: 2
          maxLength: 256
        value:
          type: number
          description: Value of the measure. Related to the uom.
          example: 10
        uom:
          type: string
          description: Unit of measurement master data.
          example: Nos, Kilogram, Meter, SquareMeter, CubicMeter, Celcius, ppm.
          minLength: 2
          maxLength: 64
        uomValue:
          type: number
          description: Base qty for unit of measurement. Can be 1 or multiple
          example: 10kg, 1tonne
        isActive:
          type: boolean
        auditDetails:
          $ref: >-
            https://raw.githubusercontent.com/egovernments/DIGIT-OSS/master/core-services/docs/common-contract_v1-1.yml#/components/schemas/AuditDetails
        additionalDetails:
          type: object
          description: >-
            Any additional information that needs to be attached to the
            estimate. For attachments, fileStoreIds will also be stored here.
      required:
        - label
        - value
        - uom
    
    MeasurementExtended:
      type: object
      properties:
        allOf:
          $ref: '#/components/schemas/DetailedMeasurement'
        workflow:
            $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-OSS/master/core-services/docs/common-contract_v1-1.yml#/components/schemas/Workflow'
    MBRequest:
      type: object
      description: Encapsulates a measurement book request
      properties:
        requestInfo:
          $ref: >-
            https://raw.githubusercontent.com/egovernments/DIGIT-OSS/master/core-services/docs/common-contract_v1-1.yml#/components/schemas/RequestInfo
        mBooks:
          type: array
          items:
            $ref: '#/components/schemas/MeasurementBook'
    MBResponse:
      type: object
      description: Encapsulates a MB response
      properties:
        responseInfo:
          $ref: >-
            https://raw.githubusercontent.com/egovernments/DIGIT-OSS/master/core-services/docs/common-contract_v1-1.yml#/components/schemas/ResponseInfo
        mBooks:
          type: array
          items:
            $ref: '#/components/schemas/MeasurementBook'
    MeasurementRequest:
      type: object
      description: Encapsulates a measurement entry request
      properties:
        requestInfo:
          $ref: >-
            https://raw.githubusercontent.com/egovernments/DIGIT-OSS/master/core-services/docs/common-contract_v1-1.yml#/components/schemas/RequestInfo
        measurementType:
          type: string
          enum:
            - ABSTRACT
            - DETAILED
        measurements:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/AbstractMeasurement'
              - $ref: '#/components/schemas/DetailedMeasurement'
          minItems: 1
    MeasurementResponse:
      type: object
      description: Encapsulates a measurement response
      properties:
        responseInfo:
          $ref: >-
            https://raw.githubusercontent.com/egovernments/DIGIT-OSS/master/core-services/docs/common-contract_v1-1.yml#/components/schemas/ResponseInfo
        measurements:
          type: array
          items:
            $ref: '#/components/schemas/DetailedMeasurement'
    MeasurementServiceRequest:
      type: object
      description: Encapsulates a measurement book service request. Takes a singleton along with workflow.
      properties:
        requestInfo:
          $ref: >-
            https://raw.githubusercontent.com/egovernments/DIGIT-OSS/master/core-services/docs/common-contract_v1-1.yml#/components/schemas/RequestInfo
        measurements:
          type: array
          items:
            $ref: '#/components/schemas/MeasurementExtended'
    
    MeasurementServiceResponse:
      type: object
      description: Encapsulates a measurement service response. Returns an array of measurements with workflow.
      properties:
        responseInfo:
          $ref: >-
            https://raw.githubusercontent.com/egovernments/DIGIT-OSS/master/core-services/docs/common-contract_v1-1.yml#/components/schemas/ResponseInfo
        measurements:
          type: array
          items:
            $ref: '#/components/schemas/MeasurementExtended'
