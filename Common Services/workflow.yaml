openapi: 3.0.1
info:
  title: eGov Workflow Engine.
  description: "APIs for Workflow engine. This modules handles Below functionality.\
    \ \n1. Start workflow \n2. Validate documents and action on each step of workflow\n\
    3. Calculate state wise SLA as well as overall SLA of the application\n4. Search\
    \ existing workflow applications \n"
  contact:
    name: eGovernments Foundation
    email: contacts@egovernments.org
  version: 1.0.0
servers:
- url: /egov-wf
paths:
  /process/_transition:
    post:
      tags:
      - WorkFlow
      summary: Create new workflow entry for a given application number(businessId).
      description: "To create new workflow applicationin the system. API supports\
        \ bulk creation with max limit as defined in the Trade License Request. Please\
        \ note that either whole batch succeeds or fails, there's no partial batch\
        \ success. To create one workflow(ProcessInstance) instance, please pass array\
        \ with one workflow(ProcessInstance) object. \n  \n\nFollowing Conditions\
        \ are applied -\n  1. Valid action is send according to workflow configuration\
        \ defined\n  2. supportDocuments to perform workflow action will created.\
        \ In case of not attaching the Mandatory Supported Documents creation of workflow\
        \ Fails.\n  3. Application will move to next state if valid action is passes.\n"
      requestBody:
        description: Details for the new Workflow(s) + RequestInfo meta data.
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ProcessInstanceRequest'
        required: true
      responses:
        201:
          description: ReponseInfo with Workflow(s) created successfully
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProcessIntanceResponse'
        400:
          description: Workflow(s) creation failed
          content:
            '*/*':
              schema:
                $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/ErrorRes'
      x-codegen-request-body-name: ProcessInstanceRequest
  /process/_search:
    post:
      tags:
      - WorkFlow
      summary: Get the list of workflow applications defined in the system.
      description: |-
        1. Search and get Application(s)  based on defined search criteria.
        2. In case multiple parameters are passed Application(s) will be searched as an AND combination of all the parameters.
      parameters:
      - name: tenantId
        in: query
        description: Unique id for a tenant.
        required: true
        schema:
          type: string
          format: varchar
      - name: ids
        in: query
        description: unique identifier of Application
        style: form
        explode: false
        schema:
          maxItems: 50
          type: array
          items:
            type: integer
            format: int64
      - name: businessService
        in: query
        description: Name of the workflow confguration.
        schema:
          maxLength: 64
          minLength: 2
          type: string
      - name: moduleName
        in: query
        description: Module name to which workflow application belongs
        schema:
          maxLength: 64
          minLength: 2
          type: string
      - name: businessIds
        in: query
        description: The list of businessIds
        style: form
        explode: false
        schema:
          maxItems: 50
          type: array
          items:
            type: string
      - name: assignee
        in: query
        description: The unique  Old license number for a Application.
        schema:
          maxLength: 64
          minLength: 2
          type: string
      - name: history
        in: query
        description: Boolean flag to return history of the workflow
        schema:
          type: boolean
      - name: limit
        in: query
        description: Number of records to be returned
        schema:
          type: integer
      - name: offset
        in: query
        description: Starting offset for returning search response
        schema:
          type: integer
      requestBody:
        description: Parameter to carry Request metadata in the request body
        content:
          '*/*':
            schema:
              $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/RequestInfo'
        required: false
      responses:
        200:
          description: Application(s) Retrived Successfully
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProcessIntanceResponse'
        400:
          description: Invalid input.
          content:
            '*/*':
              schema:
                $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/ErrorRes'
      x-codegen-request-body-name: requestInfo
  /process/_count:
    post:
      tags:
      - WorkFlow
      summary: Get the count of applications satisfying the given criteria
      description: |-
        1. Returns the total number of application in the system based on the criteria given
        2. Primarily used to shoe total count in inbox
      parameters:
      - name: tenantId
        in: query
        description: Unique id for a tenant.
        required: true
        schema:
          type: string
          format: varchar
      - name: ids
        in: query
        description: unique identifier of trade licence
        style: form
        explode: false
        schema:
          maxItems: 50
          type: array
          items:
            type: integer
            format: int64
      - name: businessService
        in: query
        description: Unique application number for a trade license application.
        schema:
          maxLength: 64
          minLength: 2
          type: string
      - name: businessIds
        in: query
        description: The list of businessIds
        style: form
        explode: false
        schema:
          maxItems: 50
          type: array
          items:
            type: integer
            format: int64
      - name: assignee
        in: query
        description: The unique  Old license number for a Trade license.
        schema:
          maxLength: 64
          minLength: 2
          type: string
      - name: history
        in: query
        description: Boolean flag to return history of the workflow
        schema:
          type: boolean
      requestBody:
        description: Parameter to carry Request metadata in the request body
        content:
          '*/*':
            schema:
              $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/RequestInfo'
        required: false
      responses:
        200:
          description: Trade License(s) Retrived Successfully
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProcessIntanceResponse'
        400:
          description: Invalid input.
          content:
            '*/*':
              schema:
                $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/ErrorRes'
      x-codegen-request-body-name: requestInfo
      
  /process/_nearingslacount:
    post:
      tags:
      - WorkFlow
      summary: Get the nearing sla count of workflow applications defined in the system.
      description: |-
        1. Search and get Application(s)  based on defined search criteria.
        2. In case multiple parameters are passed Application(s) will be searched as an AND combination of all the parameters.
      parameters:
      - name: tenantId
        in: query
        description: Unique id for a tenant.
        required: true
        schema:
          type: string
          format: varchar
      - name: ids
        in: query
        description: unique identifier of Application
        style: form
        explode: false
        schema:
          maxItems: 50
          type: array
          items:
            type: integer
            format: int64
      - name: businessService
        in: query
        description: Name of the workflow confguration.
        schema:
          maxLength: 64
          minLength: 2
          type: string
      - name: moduleName
        in: query
        description: Module name to which workflow application belongs
        schema:
          maxLength: 64
          minLength: 2
          type: string
      - name: businessIds
        in: query
        description: The list of businessIds
        style: form
        explode: false
        schema:
          maxItems: 50
          type: array
          items:
            type: string
      - name: assignee
        in: query
        description: The unique  Old license number for a Application.
        schema:
          maxLength: 64
          minLength: 2
          type: string
      - name: history
        in: query
        description: Boolean flag to return history of the workflow
        schema:
          type: boolean
      - name: limit
        in: query
        description: Number of records to be returned
        schema:
          type: integer
      - name: offset
        in: query
        description: Starting offset for returning search response
        schema:
          type: integer
      requestBody:
        description: Parameter to carry Request metadata in the request body
        content:
          '*/*':
            schema:
              $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/RequestInfo'
        required: false
      responses:
        200:
          description: Application(s) Retrived Successfully
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProcessCountResponse'
        400:
          description: Invalid input.
          content:
            '*/*':
              schema:
                $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/ErrorRes'
      x-codegen-request-body-name: requestInfo   
  /process/_statuscount:
    post:
      tags:
      - WorkFlow
      summary: Get the list of status count workflow applications defined in the system.
      description: |-
        1. Search and get Application(s)  based on defined search criteria.
        2. In case multiple parameters are passed Application(s) will be searched as an AND combination of all the parameters.
      parameters:
      - name: tenantId
        in: query
        description: Unique id for a tenant.
        required: true
        schema:
          type: string
          format: varchar
      - name: ids
        in: query
        description: unique identifier of Application
        style: form
        explode: false
        schema:
          maxItems: 50
          type: array
          items:
            type: integer
            format: int64
      - name: businessService
        in: query
        description: Name of the workflow confguration.
        schema:
          maxLength: 64
          minLength: 2
          type: string
      - name: moduleName
        in: query
        description: Module name to which workflow application belongs
        schema:
          maxLength: 64
          minLength: 2
          type: string
      - name: businessIds
        in: query
        description: The list of businessIds
        style: form
        explode: false
        schema:
          maxItems: 50
          type: array
          items:
            type: string
      - name: assignee
        in: query
        description: The unique  Old license number for a Application.
        schema:
          maxLength: 64
          minLength: 2
          type: string
      - name: history
        in: query
        description: Boolean flag to return history of the workflow
        schema:
          type: boolean
      - name: limit
        in: query
        description: Number of records to be returned
        schema:
          type: integer
      - name: offset
        in: query
        description: Starting offset for returning search response
        schema:
          type: integer
      requestBody:
        description: Parameter to carry Request metadata in the request body
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/StatusCountReq'
        required: false
      responses:
        200:
          description: Application(s) Retrived Successfully
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseEntity'
        400:
          description: Invalid input.
          content:
            '*/*':
              schema:
                $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/ErrorRes'
      x-codegen-request-body-name: StatusCountReq       
  /process/escalate/_search:
    post:
      tags:
      - Escalate
      summary: Get the list of escalate workflow applications defined in the system.
      description: |-
        1. Search and get Application(s)  based on defined search criteria.
        2. In case multiple parameters are passed Application(s) will be searched as an AND combination of all the parameters.
      parameters:
      - name: tenantId
        in: query
        description: Unique id for a tenant.
        required: true
        schema:
          type: string
          format: varchar
      - name: ids
        in: query
        description: unique identifier of Application
        style: form
        explode: false
        schema:
          maxItems: 50
          type: array
          items:
            type: integer
            format: int64
      - name: businessService
        in: query
        description: Name of the workflow confguration.
        schema:
          maxLength: 64
          minLength: 2
          type: string
      - name: moduleName
        in: query
        description: Module name to which workflow application belongs
        schema:
          maxLength: 64
          minLength: 2
          type: string
      - name: businessIds
        in: query
        description: The list of businessIds
        style: form
        explode: false
        schema:
          maxItems: 50
          type: array
          items:
            type: string
      - name: assignee
        in: query
        description: The unique  Old license number for a Application.
        schema:
          maxLength: 64
          minLength: 2
          type: string
      - name: history
        in: query
        description: Boolean flag to return history of the workflow
        schema:
          type: boolean
      - name: limit
        in: query
        description: Number of records to be returned
        schema:
          type: integer
      - name: offset
        in: query
        description: Starting offset for returning search response
        schema:
          type: integer
      requestBody:
        description: Parameter to carry Request metadata in the request body
        content:
          '*/*':
            schema:
              $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/RequestInfo'
        required: false
      responses:
        200:
          description: Application(s) Retrived Successfully
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProcessIntanceResponse'
        400:
          description: Invalid input.
          content:
            '*/*':
              schema:
                $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/ErrorRes'
      x-codegen-request-body-name: requestInfo    
      
  /auto/{businessService}/_escalate:
    post:
      tags:
      - Escalate
      summary: Get the list of workflow applications defined in the system.
      description: |-
        1. Search and get Application(s)  based on defined search criteria.
        2. In case multiple parameters are passed Application(s) will be searched as an AND combination of all the parameters.
      parameters:
      - in: path
        name: businessService
        required: true
        description: Name of the workflow confguration.
        schema:
          maxLength: 64
          minLength: 2
          type: string
      - name: tenantId
        in: query
        description: Unique id for a tenant.
        required: true
        schema:
          type: string
          format: varchar
      - name: ids
        in: query
        description: unique identifier of Application
        style: form
        explode: false
        schema:
          maxItems: 50
          type: array
          items:
            type: integer
            format: int64
      - name: moduleName
        in: query
        description: Module name to which workflow application belongs
        schema:
          maxLength: 64
          minLength: 2
          type: string
      - name: businessIds
        in: query
        description: The list of businessIds
        style: form
        explode: false
        schema:
          maxItems: 50
          type: array
          items:
            type: string
      - name: assignee
        in: query
        description: The unique  Old license number for a Application.
        schema:
          maxLength: 64
          minLength: 2
          type: string
      - name: history
        in: query
        description: Boolean flag to return history of the workflow
        schema:
          type: boolean
      - name: limit
        in: query
        description: Number of records to be returned
        schema:
          type: integer
      - name: offset
        in: query
        description: Starting offset for returning search response
        schema:
          type: integer
      requestBody:
        description: Parameter to carry Request metadata in the request body
        content:
          '*/*':
            schema:
              $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/RequestInfo'
        required: false
      responses:
        200:
          description: Application(s) Retrived Successfully
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProcessIntanceResponse'
        400:
          description: Invalid input.
          content:
            '*/*':
              schema:
                $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/ErrorRes'
      x-codegen-request-body-name: requestInfo    
      
  /businessservice/v2/_create:
    post:
      tags:
      - BusinessServiceV2
      summary: Create new v2 BuinessService.
      description: "To create new workflow configuration(BuinessService) in the system.\
        \ API supports bulk creation with max limit as defined in the BuinessService\
        \ Request. Please note that either whole batch succeeds or fails, there's\
        \ no partial batch success. To create one BuinessService, please pass array\
        \ with one BuinessService object. \n  \n\nFollowing Conditions are applied\
        \ -\n  1. All actions have valid next state i.e next state should be present\
        \ in the system\n  2. uuids will be auto generated and assigned to all sub\
        \ objects\n  3. For end states isTerminateState should be true\n"
      requestBody:
        description: Details for the new BusinessService(s) + RequestInfo meta data.
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/BusinessServiceRequest'
        required: true
      responses:
        201:
          description: ReponseInfo withBusinessService(s) created successfully
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BusinessServiceResponse'
        400:
          description: BusinessService(s) creation failed
          content:
            '*/*':
              schema:
                $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/ErrorRes'
      x-codegen-request-body-name: BusinessServiceRequest    
  /businessservice/v2/_update:
    post:
      tags:
      - BusinessServiceV2
      summary: Updates a existing v2 BuinessService.
      description: "Can be used only to add new state or action in the workflow. Can\
        \ update any existing field. Removing of any state is not allowed as applications\
        \ in that state will be in invalid state \n  \n\nFollowing Conditions are\
        \ applied -\n  1. can add states and actions\n  2. can update roles in action,\
        \ SLA etc.\n"
      requestBody:
        description: Details for the new BusinessService(s) + RequestInfo meta data.
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/BusinessServiceRequest'
        required: true
      responses:
        201:
          description: ReponseInfo withBusinessService(s) created successfully
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BusinessServiceResponse'
        400:
          description: BusinessService(s) creation failed
          content:
            '*/*':
              schema:
                $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/ErrorRes'
      x-codegen-request-body-name: BusinessServiceRequest    
  /businessservice/v2/_search:
    post:
      tags:
      - BusinessServiceV2
      summary: Get the list of v2 BusinessServices defined in the system.
      description: |-
        1. Search and get BusinessServices(s)  based on defined search criteria.
        2. In case multiple parameters are passed BusinessService(s) will be searched as an AND combination of all the parameters.
      parameters:
      - name: businessServices
        in: query
        description: BusinessService code of the businessService
        style: form
        explode: false
        schema:
          maxItems: 50
          type: array
          items:
            type: integer
            format: int64
      - name: tenantId
        in: query
        description: Unique id for a tenant.
        required: true
        schema:
          type: string
          format: varchar
      requestBody:
        description: Parameter to carry Request metadata in the request body
        content:
          '*/*':
            schema:
              $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/RequestInfo'
        required: false
      responses:
        200:
          description: Trade License(s) Retrived Successfully
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BusinessServiceResponse'
        400:
          description: Invalid input.
          content:
            '*/*':
              schema:
                $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/ErrorRes'
      x-codegen-request-body-name: requestInfo    
  /businessservice/_create:
    post:
      tags:
      - BusinessService
      summary: Create new BuinessService.
      description: "To create new workflow configuration(BuinessService) in the system.\
        \ API supports bulk creation with max limit as defined in the BuinessService\
        \ Request. Please note that either whole batch succeeds or fails, there's\
        \ no partial batch success. To create one BuinessService, please pass array\
        \ with one BuinessService object. \n  \n\nFollowing Conditions are applied\
        \ -\n  1. All actions have valid next state i.e next state should be present\
        \ in the system\n  2. uuids will be auto generated and assigned to all sub\
        \ objects\n  3. For end states isTerminateState should be true\n"
      requestBody:
        description: Details for the new BusinessService(s) + RequestInfo meta data.
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/BusinessServiceRequest'
        required: true
      responses:
        201:
          description: ReponseInfo withBusinessService(s) created successfully
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BusinessServiceResponse'
        400:
          description: BusinessService(s) creation failed
          content:
            '*/*':
              schema:
                $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/ErrorRes'
      x-codegen-request-body-name: BusinessServiceRequest
  /businessservice/_update:
    post:
      tags:
      - BusinessService
      summary: Updates a existing BuinessService.
      description: "Can be used only to add new state or action in the workflow. Can\
        \ update any existing field. Removing of any state is not allowed as applications\
        \ in that state will be in invalid state \n  \n\nFollowing Conditions are\
        \ applied -\n  1. can add states and actions\n  2. can update roles in action,\
        \ SLA etc.\n"
      requestBody:
        description: Details for the new BusinessService(s) + RequestInfo meta data.
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/BusinessServiceRequest'
        required: true
      responses:
        201:
          description: ReponseInfo withBusinessService(s) created successfully
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BusinessServiceResponse'
        400:
          description: BusinessService(s) creation failed
          content:
            '*/*':
              schema:
                $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/ErrorRes'
      x-codegen-request-body-name: BusinessServiceRequest
  /businessservice/_search:
    post:
      tags:
      - BusinessService
      summary: Get the list of BusinessServices defined in the system.
      description: |-
        1. Search and get BusinessServices(s)  based on defined search criteria.
        2. In case multiple parameters are passed BusinessService(s) will be searched as an AND combination of all the parameters.
      parameters:
      - name: businessServices
        in: query
        description: BusinessService code of the businessService
        style: form
        explode: false
        schema:
          maxItems: 50
          type: array
          items:
            type: integer
            format: int64
      - name: tenantId
        in: query
        description: Unique id for a tenant.
        required: true
        schema:
          type: string
          format: varchar
      requestBody:
        description: Parameter to carry Request metadata in the request body
        content:
          '*/*':
            schema:
              $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/RequestInfo'
        required: false
      responses:
        200:
          description: Trade License(s) Retrived Successfully
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BusinessServiceResponse'
        400:
          description: Invalid input.
          content:
            '*/*':
              schema:
                $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/ErrorRes'
      x-codegen-request-body-name: requestInfo
components:
  schemas:
    Document:
      required:
      - documentType
      - fileStoreId
      - tenantId
      type: object
      properties:
        id:
          maxLength: 64
          minLength: 2
          type: string
          description: State Unique Identifier uuid
        tenantId:
          maxLength: 128
          minLength: 2
          type: string
          description: Unique Identifier of ULB
        documentType:
          maxLength: 64
          minLength: 2
          type: string
          description: 1.Unique document type code from common master. 2. This is
            defined under mdms common master. 3. Object defination is defined under
            'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-1-1.yml#/definitions/DocumentType'
        fileStoreId:
          maxLength: 64
          minLength: 2
          type: string
          description: Unique file store id of uploaded document.
        documentUid:
          maxLength: 64
          minLength: 2
          type: string
          description: document number(eg.Pan number, aadhar number).
        auditDetails:
          $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/AuditDetails'
      description: A Object holds the basic data for a Trade License
    ProcessInstance:
      required:
      - action
      - businessId
      - businessService
      - tenantId
      - moduleName
      type: object
      properties:
        id:
          maxLength: 64
          minLength: 2
          type: string
          description: Unique process instance id (UUID)
          readOnly: true
        tenantId:
          maxLength: 128
          minLength: 2
          type: string
          description: Unique Identifier of ULB
        businessService:
          maxLength: 128
          minLength: 2
          type: string
          description: Business service key.
        businessId:
          maxLength: 64
          minLength: 2
          type: string
          description: "Business id is a unique identifier of a task. eg(Propertyid,\
            \ \nTLid, ServiceRequestid) \n"
        action:
          maxLength: 128
          minLength: 2
          type: string
          description: Actions are define for each business service.
        moduleName:
          maxLength: 64
          minLength: 2
          type: string
          description: Module to which process instance belongs to.
        state:
          maxLength: 64
          minLength: 2
          type: string
          description: Status will be populate by efengine for each action, if it
            is configured.
          readOnly: true
        comment:
          maxLength: 64
          minLength: 2
          type: string
          description: consumer can pass the comment on each action.
        documents:
          type: array
          description: Documents can be attached with each of the action.
          items:
            $ref: '#/components/schemas/Document'
        assigner:
          $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/User'
        assignes:
          type: array
          items:
            $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/User'
        nextActions:
          type: array
          description: Wf will return next possible action based on .
          readOnly: true
          items:
            type: string
        sla:
          type: integer
          description: Date from when license is valid as epoch.
          format: int64
        currentStatus:
          type: string
          description: Status after action performed
        previousStatus:
          type: string
          description: Status before action performed
        entity:
          type: object
          properties: {}
        rating:
          type: integer
          description: Rating for current process instance
          minimum: 1
          maximum: 5
        auditDetails:
          $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/AuditDetails'
    StatusCountReq:
      type: object
      properties:
        RequestInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/RequestInfo'
        ProcessInstanceSearchCriteria:
          $ref: '#/components/schemas/ProcessInstanceSearchCriteria'
    BusinessService:
      required:
      - businessService
      - tenantId
      type: object
      properties:
        tenantId:
          maxLength: 128
          minLength: 2
          type: string
          description: Unique Identifier of ULB
        uuid:
          maxLength: 64
          minLength: 2
          type: string
          description: Unique Identifier uuid
        businessService:
          maxLength: 64
          minLength: 2
          type: string
          description: Unique Identifier of the Trade License (UUID)
        getUri:
          maxLength: 32
          minLength: 2
          type: string
          description: Unique License Number of the Trade. This is  unique in system
            for a tenant. This is mandatory but always be generated on the final approval.
            In Case of Legacy License User will enter the Old License Number.
        postUri:
          maxLength: 32
          minLength: 2
          type: string
          description: Unique License Number of the Trade. This is  unique in system
            for a tenant. This is mandatory but always be generated on the final approval.
            In Case of Legacy License User will enter the Old License Number.
        states:
          type: array
          items:
            $ref: '#/components/schemas/State'
        auditDetails:
          $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/AuditDetails'
      description: A Object holds the
    State:
      type: object
      properties:
        uuid:
          maxLength: 64
          minLength: 2
          type: string
          description: State Unique Identifier uuid
        tenantId:
          maxLength: 128
          minLength: 2
          type: string
          description: Unique Identifier of ULB
        businessServiceId:
          maxLength: 64
          minLength: 2
          type: string
          description: Unique Identifier of the Trade License (UUID)
        state:
          maxLength: 32
          minLength: 2
          type: string
          description: Unique License Number of the Trade. This is  unique in system
            for a tenant. This is mandatory but always be generated on the final approval.
            In Case of Legacy License User will enter the Old License Number.
        applicationStatus:
          type: string
          description: Application status as in module
        docUploadRequired:
          type: boolean
          description: Boolean to describe if documents are mandatory
        isStartState:
          type: boolean
          description: Boolean to describe if the workflow can be started from this
            state
        isTerminateState:
          type: boolean
          description: Boolean to describe if the state is the last state of workflow
        actions:
          type: array
          items:
            $ref: '#/components/schemas/Action'
        auditDetails:
          $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/AuditDetails'
      description: A Object holds the basic data for a Trade License
    Action:
      type: object
      properties:
        uuid:
          maxLength: 64
          minLength: 2
          type: string
          description: State Unique Identifier uuid
        tenantId:
          maxLength: 128
          minLength: 2
          type: string
          description: TenantId of the ULB
        stateId:
          maxLength: 64
          minLength: 2
          type: string
          description: The uuid of the state on which action is to performed
        action:
          type: string
          description: The action to be performed
        nextStateId:
          maxLength: 64
          minLength: 2
          type: string
          description: The uuid of the resultant state
        roles:
          type: array
          description: Used for search result and create only
          items:
            type: string
        auditDetails:
          $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/AuditDetails'
      description: A Object holds the basic data for a Trade License
    ProcessInstanceRequest:
      type: object
      properties:
        RequestInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/RequestInfo'
        ProcessInstances:
          type: array
          description: Used for search result and create only
          items:
            $ref: '#/components/schemas/ProcessInstance'
      description: Contract class to receive request. Array of process instance items
        are used in case of create
    ProcessCountResponse:
      type: object
      properties:
        ResponseInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/ResponseInfo'
        Count: 
          type: integer
        ProcessInstances:
          type: array
          description: Used for search result and create only
          items:
            $ref: '#/components/schemas/ProcessIntanceResponse'
      description: Contract class to send response. Array of TradeLicense items are
        used in case of search results or response for create, whereas single TradeLicense
        item is used for update
    ProcessIntanceResponse:
      type: object
      properties:
        ResponseInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/ResponseInfo'
        ProcessInstances:
          type: array
          description: Used for search result and create only
          items:
            $ref: '#/components/schemas/ProcessInstance'
      description: Contract class to send response. Array of TradeLicense items are
        used in case of search results or response for create, whereas single TradeLicense
        item is used for update
    ProcessInstanceSearchCriteria:
      type: object
      properties:
        tenantId:
          type: string
        status:
          type: string
          description: status of request processing - to be enhanced in futuer to
            include INPROGRESS
        businessIds:
          maxLength: 64
          minLength: 2
          type: string
          description: "Business id is a unique identifier of a task. eg(Propertyid,\
            \ \nTLid, ServiceRequestid) \n"    
        assignee: 
          type: string
          description: The unique  Old license number for a Application.
        ids: 
          type: array
          description: unique identifier of Application
          items:
            type: string
        history: 
          type: boolean
          description: Boolean flag to return history of the workflow
        fromDate:
          type: integer
          format: int64
          description: Date from which the operation is registered 
        toDate:
          type: integer
          format: int64
          description: Date to which the operation is registered
        offset:
          type: integer
          description: Starting offset for returning search response
        limit: 
          type: integer
          description: Number of records to be returned
        businessService:
          type: string
          description: Used for search result and create only
        moduleName: 
          type: string
          description: Module name to which workflow application belongs
    ResponseEntity:
      title: ResponseEntity
      type: object
      properties:
        body:
          type: object
        result:
          type: array
          items:
            type: string
        statusCode:
          type: string
          enum:
            - ACCEPTED
            - ALREADY_REPORTED
            - BAD_GATEWAY
            - BAD_REQUEST
            - BANDWIDTH_LIMIT_EXCEEDED
            - CHECKPOINT
            - CONFLICT
            - CONTINUE
            - CREATED
            - DESTINATION_LOCKED
            - EXPECTATION_FAILED
            - FAILED_DEPENDENCY
            - FORBIDDEN
            - FOUND
            - GATEWAY_TIMEOUT
            - GONE
            - HTTP_VERSION_NOT_SUPPORTED
            - IM_USED
            - INSUFFICIENT_SPACE_ON_RESOURCE
            - INSUFFICIENT_STORAGE
            - INTERNAL_SERVER_ERROR
            - I_AM_A_TEAPOT
            - LENGTH_REQUIRED
            - LOCKED
            - LOOP_DETECTED
            - METHOD_FAILURE
            - METHOD_NOT_ALLOWED
            - MOVED_PERMANENTLY
            - MOVED_TEMPORARILY
            - MULTIPLE_CHOICES
            - MULTI_STATUS
            - NETWORK_AUTHENTICATION_REQUIRED
            - NON_AUTHORITATIVE_INFORMATION
            - NOT_ACCEPTABLE
            - NOT_EXTENDED
            - NOT_FOUND
            - NOT_IMPLEMENTED
            - NOT_MODIFIED
            - NO_CONTENT
            - OK
            - PARTIAL_CONTENT
            - PAYLOAD_TOO_LARGE
            - PAYMENT_REQUIRED
            - PERMANENT_REDIRECT
            - PRECONDITION_FAILED
            - PRECONDITION_REQUIRED
            - PROCESSING
            - PROXY_AUTHENTICATION_REQUIRED
            - REQUESTED_RANGE_NOT_SATISFIABLE
            - REQUEST_ENTITY_TOO_LARGE
            - REQUEST_HEADER_FIELDS_TOO_LARGE
            - REQUEST_TIMEOUT
            - REQUEST_URI_TOO_LONG
            - RESET_CONTENT
            - SEE_OTHER
            - SERVICE_UNAVAILABLE
            - SWITCHING_PROTOCOLS
            - TEMPORARY_REDIRECT
            - TOO_EARLY
            - TOO_MANY_REQUESTS
            - UNAUTHORIZED
            - UNAVAILABLE_FOR_LEGAL_REASONS
            - UNPROCESSABLE_ENTITY
            - UNSUPPORTED_MEDIA_TYPE
            - UPGRADE_REQUIRED
            - URI_TOO_LONG
            - USE_PROXY
            - VARIANT_ALSO_NEGOTIATES
        statusCountValue:
          type: integer
          format: int32      
    BusinessServiceRequest:
      type: object
      properties:
        RequestInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/RequestInfo'
        BusinessService:
          type: array
          description: Used for search result and create only
          items:
            $ref: '#/components/schemas/BusinessService'
      description: Contract class to receive request. Array of TradeLicense items
        are used in case of create, whereas single TradeLicense item is used for update
    BusinessServiceResponse:
      type: object
      properties:
        ResponseInfo:
          $ref: 'https://raw.githubusercontent.com/egovernments/DIGIT-Specs/master/Common%20Services/common-contract.yaml#/components/schemas/ResponseInfo'
        BusinessService:
          type: array
          description: Used for search result and create only
          items:
            $ref: '#/components/schemas/BusinessService'
      description: Contract class to send response. Array of TradeLicense items are
        used in case of search results or response for create, whereas single TradeLicense
        item is used for update
x-api-id: org.egov.wf.service
x-common-path: https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-1-1.yml
